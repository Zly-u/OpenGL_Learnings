name: Win Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  CBUILD_DIR: ${{github.workspace}}/__CMAKE_BUILD__/Release-gcc/Build

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
    
    runs-on: ${{matrix.os}}

    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{github.workspace}}/vcpkg'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Setup MinGW-w64
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja

    - name: Check vcpkg installed libraries
      shell: msys2 {0}
      run: |
        echo "=== Listing vcpkg_installed ==="
        ls -R ${{github.workspace}}/vcpkg_installed || echo "Not found"
    
    - name: Convert CBUILD_DIR to POSIX path.
      shell: msys2 {0}
      env:
        CBUILD_DIR: ${{env.CBUILD_DIR}}
      run: |
        CBUILD_DIR=$(echo "$CBUILD_DIR" | sed 's|\\|/|g')
        echo "CBUILD_DIR_POSIX=$CBUILD_DIR" >> $GITHUB_ENV

    - name: Configure CMake
      shell: msys2 {0}
      run: cmake --preset Release-gcc

    - name: Build
      shell: msys2 {0}
      run: cmake --build --preset Release-gcc

    - name: Verify build output
      shell: msys2 {0}
      run: file ${{env.CBUILD_DIR_POSIX}}/OpenGL_Stuff.exe || echo "Executable not found"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opengl-build-artifacts
        path: |
          CBUILD_DIR=$(echo "$CBUILD_DIR" | sed 's|\\|/|g')
          ${{env.CBUILD_DIR_POSIX}}/
          ${{env.CBUILD_DIR_POSIX}}/OpenGL_Stuff*

